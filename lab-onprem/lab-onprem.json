{
    "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":"1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Value used for Environment applied to all taggable resources"
            }
        },
        "vnetName": {
            "type":"string",
            "defaultValue": "vnet-onprem",
            "metadata": {
                "description":"Name of Vnet"
            }
        },
        "vnetCIDR": {
            "type":"string",
            "defaultValue": "10.100.0.0/16",
            "metadata": {
                "description":"CIDR of Shared Services VNet"
            }
        },
        "gwSubnetCIDR": {
            "type":"string",
            "defaultValue": "10.100.0.0/24",
            "metadata": {
                "description":"CIDR of Gateway Subnet"
            }
        },
        "bastionSubnetCIDR": {
            "type":"string",
            "defaultValue": "10.100.1.0/24",
            "metadata": {
                "description":"CIDR of Bastion subnet"
            }
        },
        "primarySubnetCIDR": {
            "type":"string",
            "defaultValue": "10.100.2.0/24",
            "metadata": {
                "description":"CIDR of primary subnet"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description":"VM Name"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "metadata": {
                "description":"VM Size"
            }
        },
        "privateIp": {
            "type": "string",
            "metadata": {
                "description":"Private IP of network interface associated with VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description":"Name of the administrator account created on the VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description":"The password for the administrator account created on the VM"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "networkApiVersionNum": "2019-09-01",
        "storageApiVersionNum": "2019-04-01",
        "computeApiVersionNum": "2019-07-01",
        "bastionSubnetName": "AzureBastionSubnet",
        "primarySubnetName": "snet-primary",
        "primaryNsgName": "nsg-primary",
        "bastionPublicIpName": "pip-bastion",
        "bastionName": "bstonprem",
        "vngPublicIpName": "pip-vngonpremvpn",
        "vngName":"vng-onpremvpn",
        "diagAcctName": "[concat(parameters('vmName'),uniqueString(resourceGroup().id))]",
        "nicName": "[concat(parameters('vmName'),uniqueString(resourceGroup().id))]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('primarySubnetName'))]"
    },
    "resources" : [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('primaryNsgName')]",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "tags": {
                "Environment":"[parameters('environment')]"
            },
            "properties": {
                "securityRules": []
            }
        },
        {
            "type":"Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('primaryNsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetCIDR')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('gwSubnetCIDR')]"
                        }   
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('bastionSubnetCIDR')]"
                        }   
                    },
                    {
                        "name": "[variables('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('primarySubnetCIDR')]",
                            "networkSecurityGroup": {
                                "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('primaryNsgName'))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": []
        },
        {
            "name": "[variables('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            },
            "tags": {
                "Environment":"[parameters('environment')]"
            }
        },
        {
            "name": "[variables('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('bastionPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "tags": {
                "Environment":"[parameters('environment')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }   
                ]
            }
        },
        {
            "name": "[variables('vngPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            },
            "tags": {
                "Environment":"[parameters('environment')]"
            }
        },
        {
            "name": "[variables('vngName')]",
            "type": "Microsoft.Network/virtualNetworkGateways",            
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vngPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "gatewayType": "vpn",
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vngPublicIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation2",
                "sku": {
                    "name": "VpnGw2",
                    "tier": "VpnGw2"
                }
            }
        },
        {
            "name": "[variables('diagAcctName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersionNum')]",
            "sku": {
              "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "location": "[variables('location')]",
            "tags": {
                "Environment":"[parameters('environment')]"
            },
            "properties": {
              "accessTier": "Hot",
              "supportsHttpsTrafficOnly": true
            },
            "resources": []
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAddress":"[parameters('privateIp')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ]
            },
            "tags": {
                "Environment":"[parameters('environment')]"
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('computeApiVersionNum')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagAcctName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagAcctName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "tags": {
                "Environment":"[parameters('environment')]"
            }
        }
    ]   
}
  